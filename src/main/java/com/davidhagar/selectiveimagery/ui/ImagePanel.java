/*
 * ImagePanel2.java
 *
 * Created on June 10, 2007, 9:14 PM
 */

package com.davidhagar.selectiveimagery.ui;

import com.davidhagar.selectiveimagery.model.LayeredImage;

import java.awt.BasicStroke;
import java.awt.Color;
import java.awt.Dimension;
import java.awt.Graphics;
import java.awt.Graphics2D;
import java.awt.Image;
import java.awt.Rectangle;
import java.awt.RenderingHints;
import java.awt.Stroke;

/**
 * 
 * @author David Hagar
 */
public class ImagePanel extends javax.swing.JPanel
{


	LayeredImage image;


	public ImagePanel(LayeredImage image)
	{
		super();
		this.image = image;
		initComponents();
	}


	/** Creates new form ImagePanel2 */
	public ImagePanel()
	{
		initComponents();
	}


	/**
	 * This method is called from within the constructor to initialize the form.
	 * WARNING: Do NOT modify this code. The content of this method is always
	 * regenerated by the Form Editor.
	 */
	// <editor-fold defaultstate="collapsed" desc=" Generated Code
	// ">//GEN-BEGIN:initComponents
	private void initComponents()
	{

		setLayout(null);

		setBorder(javax.swing.BorderFactory.createEmptyBorder(5, 5, 5, 5));
		addMouseListener(new java.awt.event.MouseAdapter()
		{
			public void mousePressed(java.awt.event.MouseEvent evt)
			{
				formMousePressed(evt);
			}
		});

	}// </editor-fold>//GEN-END:initComponents


	private void formMousePressed(java.awt.event.MouseEvent evt)
	{// GEN-FIRST:event_formMousePressed
		//System.out.println("here");
		image.isSelected = !image.isSelected;

		this.repaint();

	}// GEN-LAST:event_formMousePressed


	public void paint(Graphics g0)
	{
		super.paint(g0);
		Graphics2D g = (Graphics2D) g0;

		Image i = image.getImage(this);

		g.setRenderingHint(RenderingHints.KEY_ANTIALIASING,
				RenderingHints.VALUE_ANTIALIAS_ON);
		// g.setRenderingHint(
		// RenderingHints.KEY_INTERPOLATION ,
		// RenderingHints.VALUE_INTERPOLATION_BICUBIC );


		Rectangle panelBounds = this.getBounds();
		// g.setColor(Color.white);
		// g.fillRect(0, 0, panelBounds.width, panelBounds.height);

		float gridAspect = (float) 1;
		float windowAspect = (float) panelBounds.height / panelBounds.width;

		int width;
		int height;
		int x = 0;
		int y = 0;
		if (windowAspect > gridAspect)
		{
			width = panelBounds.width;
			height = (int) (width * gridAspect);
			y = (int) ((panelBounds.height - height) / 2);
		}
		else
		{
			height = panelBounds.height;
			width = (int) (height / gridAspect);
			x = (int) ((panelBounds.width - width) / 2);
		}

		// System.out.println("rescale");

		// Image image2 = image.getScaledInstance(width/numTilesX, height/numTilesY,
		// Image.SCALE_SMOOTH);


		g.drawImage(i, x, y, width - 5, height - 5, null);

		if (image.isSelected)
		{
			g.setColor(Color.yellow.darker());
			g.setStroke(new BasicStroke(5));
			g.drawRect(x + 2, y + 2, width - 5 - 5, height - 5 - 5);
		}

		// System.out.println("draw finish");
	}


	// Variables declaration - do not modify//GEN-BEGIN:variables
	// End of variables declaration//GEN-END:variables

}
